// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using btk_exam_project_api.Models;

#nullable disable

namespace btk_exam_project_api.Migrations
{
    [DbContext(typeof(SnDbContext))]
    [Migration("20240808180523_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("btk_exam_project_api.Models.ActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("aciklama");

                    b.Property<string>("ActionUid")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("action_uid");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("baslik");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<string>("Udi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("udi");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("Id")
                        .HasName("PK__action_l__3214EC2710CEDEFD");

                    b.HasIndex("UserId");

                    b.ToTable("action_logs", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DenemeSinav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DenemeAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DENEME_ADI");

                    b.Property<bool>("DortBirRule")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<int>("IsCreatedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_CREATED_USERID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_MODIFIED_DATE");

                    b.Property<int>("IsModifiedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_MODIFIED_USERID");

                    b.Property<double?>("KitapcikAdetMaliyet")
                        .HasColumnType("float")
                        .HasColumnName("KITAPCIK_ADET_MALIYET");

                    b.Property<int?>("KitapcikToplam")
                        .HasColumnType("int")
                        .HasColumnName("KITAPCIK_TOPLAM");

                    b.Property<string>("SinavKategori")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("SINAV_KATEGORI");

                    b.Property<string>("SinavYeri")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("sinavYeri");

                    b.Property<int>("Subeid")
                        .HasColumnType("int")
                        .HasColumnName("SUBEID");

                    b.Property<double>("Ucret")
                        .HasColumnType("float")
                        .HasColumnName("UCRET");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("UID");

                    b.Property<string>("YayinAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("YAYIN_ADI");

                    b.Property<string>("YayinLogo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("YAYIN_LOGO");

                    b.HasKey("Id")
                        .HasName("PK__deneme_s__3214EC271477057A");

                    b.HasIndex("Subeid");

                    b.ToTable("deneme_sinav", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DenemeSinaviOturum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bilgi")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("BILGI");

                    b.Property<int>("DenemeSinavId")
                        .HasColumnType("int")
                        .HasColumnName("DENEME_SINAV_ID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<int>("IsCreatedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_CREATED_USERID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_MODIFIED_DATE");

                    b.Property<int>("IsModifiedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_MODIFIED_USERID");

                    b.Property<int>("Kontenjan")
                        .HasColumnType("int")
                        .HasColumnName("KONTENJAN");

                    b.Property<int>("OturumNo")
                        .HasColumnType("int")
                        .HasColumnName("OTURUM_NO");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime")
                        .HasColumnName("TARIH");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("UID");

                    b.HasKey("Id")
                        .HasName("PK__deneme_s__3214EC273D333995");

                    b.HasIndex("DenemeSinavId");

                    b.ToTable("deneme_sinavi_oturum", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Der", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bilgi")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("bilgi");

                    b.Property<string>("DersAd")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Ders_Ad");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isCreatedDate");

                    b.Property<int>("IsCreatedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isCreatedUserID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isModifiedDate");

                    b.Property<int>("IsModifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isModifiedUserID");

                    b.Property<int>("SubeId")
                        .HasColumnType("int")
                        .HasColumnName("subeID");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UID");

                    b.HasKey("Id")
                        .HasName("PK__ders__3214EC27B52AE52C");

                    b.HasIndex("SubeId");

                    b.ToTable("ders", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DersOturumSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Baslangic")
                        .HasColumnType("datetime")
                        .HasColumnName("BASLANGIC");

                    b.Property<DateTime>("Bitis")
                        .HasColumnType("datetime")
                        .HasColumnName("BITIS");

                    b.Property<int>("Dersid")
                        .HasColumnType("int")
                        .HasColumnName("DERSID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isCreatedDate");

                    b.Property<int>("IsCreatedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isCreatedUserID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isModifiedDate");

                    b.Property<int>("IsModifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isModifiedUserID");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime")
                        .HasColumnName("tarih");

                    b.Property<int>("Teacherid")
                        .HasColumnType("int")
                        .HasColumnName("TEACHERID");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UID");

                    b.HasKey("Id")
                        .HasName("PK__ders_otu__3214EC27E82E9DE0");

                    b.HasIndex("Dersid");

                    b.HasIndex("Teacherid");

                    b.ToTable("ders_oturum_set", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DersOturumUserSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bilgi")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isCreatedDate");

                    b.Property<int>("IsCreatedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isCreatedUserID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isModifiedDate");

                    b.Property<int>("IsModifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isModifiedUserID");

                    b.Property<int>("OturumId")
                        .HasColumnType("int")
                        .HasColumnName("OTURUM_ID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("STUDENT_ID");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UID");

                    b.HasKey("Id")
                        .HasName("PK__ders_otu__3214EC27A1D3A1F8");

                    b.HasIndex("OturumId");

                    b.HasIndex("StudentId");

                    b.ToTable("ders_oturum_user_set", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.KullaniciMesajLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<int>("IsCreatedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_CREATED_USERID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_MODIFIED_DATE");

                    b.Property<int>("IsModifiedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_MODIFIED_USERID");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("mesaj");

                    b.Property<DateTime>("MesajTarih")
                        .HasColumnType("datetime")
                        .HasColumnName("mesaj_tarih");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("UID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("Id")
                        .HasName("PK__kullanic__3214EC27443B29B5");

                    b.HasIndex("UserId");

                    b.ToTable("kullanici_mesaj_log", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Kullanicilar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("AD");

                    b.Property<string>("Eposta")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("EPOSTA");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<int>("IsCreatedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_CREATED_USERID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_MODIFIED_DATE");

                    b.Property<int>("IsModifiedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_MODIFIED_USERID");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("KULLANICI_ADI");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("ROLE");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("SIFRE");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("SOYAD");

                    b.Property<int>("SubeId")
                        .HasColumnType("int")
                        .HasColumnName("SUBE_ID");

                    b.Property<string>("Tel")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("TEL");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("UID");

                    b.HasKey("Id")
                        .HasName("PK__kullanic__3214EC2710BFF59C");

                    b.HasIndex("SubeId");

                    b.ToTable("kullanicilar", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.StudentOtherInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("baslik");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<int>("IsCreatedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isCreatedUserID");

                    b.Property<DateTime>("IsCreateeDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isCreateeDate");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isModifiedDate");

                    b.Property<int>("IsModifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isModifiedUserID");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("link");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("UID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__student___3214EC27CEF8019A");

                    b.HasIndex("UserId");

                    b.ToTable("student_other_info", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EPOSTA");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_MODIFIED_DATE");

                    b.Property<int>("SubeNumber")
                        .HasColumnType("int")
                        .HasColumnName("SUBE_NUMBER");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("TEL");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("UID");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("UNVAN");

                    b.HasKey("Id")
                        .HasName("PK__sube__3214EC279D75311D");

                    b.ToTable("sube", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.TeacherHaftaGunSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GUN");

                    b.Property<int>("Teacherid")
                        .HasColumnType("int")
                        .HasColumnName("TEACHERID");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("UID");

                    b.HasKey("Id")
                        .HasName("PK__teacher___3214EC27336E5A27");

                    b.HasIndex("Teacherid");

                    b.ToTable("teacher_hafta_gun_set", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.UserDersSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dersid")
                        .HasColumnType("int")
                        .HasColumnName("DERSID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isCreatedDate");

                    b.Property<int>("IsCreatedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isCreatedUserID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("isModifiedDate");

                    b.Property<int>("IsModifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("isModifiedUserID");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UID");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.HasKey("Id")
                        .HasName("PK__user_der__3214EC278BBE2E21");

                    b.HasIndex("Dersid");

                    b.HasIndex("Userid");

                    b.ToTable("user_ders_set", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.UserOturumSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Dogru")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime>("IsCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_CREATED_DATE");

                    b.Property<int>("IsCreatedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_CREATED_USERID");

                    b.Property<DateTime>("IsModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("IS_MODIFIED_DATE");

                    b.Property<int>("IsModifiedUserid")
                        .HasColumnType("int")
                        .HasColumnName("IS_MODIFIED_USERID");

                    b.Property<double?>("Net")
                        .HasColumnType("float");

                    b.Property<int>("OturumId")
                        .HasColumnType("int")
                        .HasColumnName("OTURUM_ID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("UID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.Property<double?>("Yanlis")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__user_otu__3214EC27D9DC9FDD");

                    b.HasIndex("OturumId");

                    b.HasIndex("UserId");

                    b.ToTable("user_oturum_set", (string)null);
                });

            modelBuilder.Entity("btk_exam_project_api.Models.ActionLog", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "User")
                        .WithMany("ActionLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_action_logs_kullanicilar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DenemeSinav", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Sube", "Sube")
                        .WithMany("DenemeSinavs")
                        .HasForeignKey("Subeid")
                        .IsRequired()
                        .HasConstraintName("FK_deneme_sinav_sube");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DenemeSinaviOturum", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.DenemeSinav", "DenemeSinav")
                        .WithMany("DenemeSinaviOturums")
                        .HasForeignKey("DenemeSinavId")
                        .IsRequired()
                        .HasConstraintName("FK_deneme_sinavi_oturum_deneme_sinav");

                    b.Navigation("DenemeSinav");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Der", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Sube", "Sube")
                        .WithMany("Ders")
                        .HasForeignKey("SubeId")
                        .IsRequired()
                        .HasConstraintName("FK_ders_sube");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DersOturumSet", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Der", "Ders")
                        .WithMany("DersOturumSets")
                        .HasForeignKey("Dersid")
                        .IsRequired()
                        .HasConstraintName("FK_ders_oturum_set_ders");

                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "Teacher")
                        .WithMany("DersOturumSets")
                        .HasForeignKey("Teacherid")
                        .IsRequired()
                        .HasConstraintName("FK_ders_oturum_set_kullanicilar");

                    b.Navigation("Ders");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DersOturumUserSet", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.DersOturumSet", "Oturum")
                        .WithMany("DersOturumUserSets")
                        .HasForeignKey("OturumId")
                        .IsRequired()
                        .HasConstraintName("FK_ders_oturum_user_set_ders_oturum_set");

                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "Student")
                        .WithMany("DersOturumUserSets")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_ders_oturum_user_set_kullanicilar");

                    b.Navigation("Oturum");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.KullaniciMesajLog", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "User")
                        .WithMany("KullaniciMesajLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_kullanici_mesaj_log_kullanicilar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Kullanicilar", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Sube", "Sube")
                        .WithMany("Kullanicilars")
                        .HasForeignKey("SubeId")
                        .IsRequired()
                        .HasConstraintName("FK_kullanicilar_sube");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.StudentOtherInfo", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "User")
                        .WithMany("StudentOtherInfos")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_student_other_info_kullanicilar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.TeacherHaftaGunSet", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "Teacher")
                        .WithMany("TeacherHaftaGunSets")
                        .HasForeignKey("Teacherid")
                        .IsRequired()
                        .HasConstraintName("FK_teacher_hafta_gun_set_kullanicilar");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.UserDersSet", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.Der", "Ders")
                        .WithMany("UserDersSets")
                        .HasForeignKey("Dersid")
                        .IsRequired()
                        .HasConstraintName("FK_user_ders_set_ders");

                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "User")
                        .WithMany("UserDersSets")
                        .HasForeignKey("Userid")
                        .IsRequired()
                        .HasConstraintName("FK_user_ders_set_kullanicilar");

                    b.Navigation("Ders");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.UserOturumSet", b =>
                {
                    b.HasOne("btk_exam_project_api.Models.DenemeSinaviOturum", "Oturum")
                        .WithMany("UserOturumSets")
                        .HasForeignKey("OturumId")
                        .IsRequired()
                        .HasConstraintName("FK_user_oturum_set_deneme_sinavi_oturum");

                    b.HasOne("btk_exam_project_api.Models.Kullanicilar", "User")
                        .WithMany("UserOturumSets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_user_oturum_set_kullanicilar");

                    b.Navigation("Oturum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DenemeSinav", b =>
                {
                    b.Navigation("DenemeSinaviOturums");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DenemeSinaviOturum", b =>
                {
                    b.Navigation("UserOturumSets");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Der", b =>
                {
                    b.Navigation("DersOturumSets");

                    b.Navigation("UserDersSets");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.DersOturumSet", b =>
                {
                    b.Navigation("DersOturumUserSets");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Kullanicilar", b =>
                {
                    b.Navigation("ActionLogs");

                    b.Navigation("DersOturumSets");

                    b.Navigation("DersOturumUserSets");

                    b.Navigation("KullaniciMesajLogs");

                    b.Navigation("StudentOtherInfos");

                    b.Navigation("TeacherHaftaGunSets");

                    b.Navigation("UserDersSets");

                    b.Navigation("UserOturumSets");
                });

            modelBuilder.Entity("btk_exam_project_api.Models.Sube", b =>
                {
                    b.Navigation("DenemeSinavs");

                    b.Navigation("Ders");

                    b.Navigation("Kullanicilars");
                });
#pragma warning restore 612, 618
        }
    }
}
